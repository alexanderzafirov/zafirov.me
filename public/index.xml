<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zax&#39; Thoughts</title>
    <link>http://alexanderzafirov.github.io/zafirov.me/</link>
    <description>Recent content on Zax&#39; Thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Dec 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://alexanderzafirov.github.io/zafirov.me/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Today is a great day ...</title>
      <link>http://alexanderzafirov.github.io/zafirov.me/post/challenges/</link>
      <pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://alexanderzafirov.github.io/zafirov.me/post/challenges/</guid>
      <description>&lt;p&gt;&amp;hellip; already! But why is that? To answer that question first let me walk you through my year.&lt;/p&gt;

&lt;p&gt;As is obvious I haven&amp;rsquo;t written much in 2017 and that is for a reason. I traveled, I faced obstacles and learned a lot of lessons from my mistakes. If 2016 was a year of changes then 2017 was that and some more so I name the last 12 months - a year of challenges.&lt;/p&gt;

&lt;p&gt;First - work related challenges. I am software engineer. In my profession to be on the top of your technical game you need to posses one quality. Just one! And that&amp;rsquo;s &lt;em&gt;curiosity&lt;/em&gt;. That translates to constant reading, learning, tinkering, discussing - being (self-)aware.
But if you want to go beyond that to a more &lt;em&gt;communicative&lt;/em&gt; position you need a whole different assortment of skills. I&amp;rsquo;m talking about the infamous &lt;em&gt;soft skills&lt;/em&gt;. I was faced with a situation where my team needed someone to step up and give people a way to be more transparent and open about their work. Being the helping guy I am, I volunteered for the task. I did my research as to what is necessary to do in this situation as well as asked other people whose job includes such tasks. I applied the learnings to my team and soon we were rolling forward. Funny enough that served for some time and then when I no longer had time to address the aforementioned problems, they came to bite us back. Even though I won the battle, I lost the war. I didn&amp;rsquo;t put things into perspective and the initial effort was made useless. Nevertheless experience was gained, a skill was introduced, help was provided, the team was groomed.&lt;/p&gt;

&lt;p&gt;Second - fitness challenges. Since the summer of 2016 I have spent quite some time in the realm of body-weight exercises aka calisthenics. Combine that with running and you get a powerful body able to go a long way. This year I decided to put that theory to the test. Along with my workout buddies we subscribed for 3 serious races in the month of September. 2 Obstacle Circuit Races (OCRs) and a half-marathon. The circumstances in which these races happened were really different which made any preparation I had for them nearly useless.
The first OCR took me to the hills of Oslo where I had to go up and down a hilly terrain with a denivelation of probably 700-1000 m several times capping it off with a run up a ski slope.
Then I did a half-marathon which took place in the streets of Copenhagen. It started off bad as my new fitness tracker had mislead me with my pace in the month leading up to the race. I started far too fast, ended up burning out and having to suffer for it all the way until the last quarter of the race. And in the end there was a thunderstorm with hail. And I lost my wireless headphones. And I had to change in a muddy field with rain pouring on me.
I finished the month in style with a nice OCR on a beach in the Copenhagen area. That one didn&amp;rsquo;t bring any surprises. If I have to sum this month up, I would say - it was amazing but if I am to do that ever again I will definitely prepare differently for it. But again - experience gained, skills improved, team strengthened - self bettered.&lt;/p&gt;

&lt;p&gt;September came and went and my body didn&amp;rsquo;t seem to have any problem with taking so much beating but subsequently it started giving up in areas I didn&amp;rsquo;t expect it would. Which is a nice segway into the third and final - health challenges. Unlike previous years where I would get the occasional cold this year I had a whole plethora of health related issues. Nothing serious as it turned out in the end. But the process of going through that was especially tough for me as an adult that hasn&amp;rsquo;t had any big problems in his conscious life. I don&amp;rsquo;t want to talk about the problems themselves but rather the process of overcoming them and ultimately - and luckily - ending up healthy again. The first thing that anyone reading this has to realize is that as much as we hate to admit it - &lt;strong&gt;life&lt;/strong&gt; is not about living for the moment. It &lt;strong&gt;is for realizing the moment but living for your whole life&lt;/strong&gt;. In other words - it&amp;rsquo;s not a sprint but a marathon. So the answer to the question you ask yourself on those shitty days &amp;ldquo;Why am I not getting better even though the results/the doctor/my friends said that I should?&amp;rdquo; is &amp;ldquo;It takes time&amp;rdquo;. And that&amp;rsquo;s the truth. It takes time. Sometimes more, sometimes less. And there&amp;rsquo;s nothing better you can do but be patient. I&amp;rsquo;m sure some of you reading this don&amp;rsquo;t agree with me so I urge you to do that thing you  want so badly right now! Go on skip school when you have to study, eat chocolate when you want to loose weight, skip running when you want to run a marathon, don&amp;rsquo;t code when you want to change that annoying job, do deadlifts when you are still recovering from your lower back pain. See where that takes you and how fast it gives you the desired results.&lt;/p&gt;

&lt;p&gt;The other thing I found useful for going through a tough time is to &lt;strong&gt;do what you are capable of doing right now and not worry about the things you cannot influence (anymore)&lt;/strong&gt;. Suddenly all the could&amp;rsquo;ve/would&amp;rsquo;ve/should&amp;rsquo;ve goes away along with that guy that cut me off on the road, I forgot my keys and bad karma. If you focus on thinking of a list of things that can be executed in order by you right now and work through them patiently one item at a time results will inevitably come.&lt;/p&gt;

&lt;p&gt;The bold - both meanings of the word - statements from the previous two paragraphs are deeply connected and lead (me) to the following understanding - &lt;strong&gt;every day that you wake up and you get to realize it is a great day already&lt;/strong&gt;. That&amp;rsquo;s the base line. Ground zero. Rock bottom. From here on in everything is a gain. The bad things are life experiences. The good things are just a follow up of the previous onces. Life is multi-dimensional and full of colors so everything counts, everything matters. In other words - time is a our most precious resource so we should be mindful how we spend it.&lt;/p&gt;

&lt;p&gt;And so we are here. Alive. Today. Again. And it feels awesome!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016 - A Year Of Changes</title>
      <link>http://alexanderzafirov.github.io/zafirov.me/post/changes/</link>
      <pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://alexanderzafirov.github.io/zafirov.me/post/changes/</guid>
      <description>&lt;p&gt;2016 was a rough year. Everywhere you look you see turmoil. Brexit, Trump, Syria, Nice, Berlin, Migrants, &amp;hellip; And here comes a question - has this world been in a tougher spot? Of course. An we have always persevered. How? By being human!&lt;/p&gt;

&lt;p&gt;I will come back to this thought but first let me take you through my 2016. It was also full of highs and lows. Fortunately for me it peaked in mainly positive outcomes. Nevertheless to get to those great moments of happiness I had to get through a great deal of obstacles. Instead of the achievements themselves, I&amp;rsquo;d like to talk about the tools that guided me towards my accomplishments.&lt;/p&gt;

&lt;p&gt;The first thing I&amp;rsquo;d like to talk about is meditation. After reading an article in the first quarter of the year I decided to try out &lt;code&gt;mindfulness meditation&lt;/code&gt;. Now before I tell you about the benefits it gave me, I should let you know that before attempting to meditate, I had little to no clue about what that is. Yes, of course, I had seen the movies about Shao-Lin monks levitating above the ground but I considered that to be bullshit. My thoughts were similar about the subject at hand.
I incorporated meditation in my daily routine and this recurrent exposure is what gave me results. Namely it has grounded me when I needed something to keep me focused on my journey and the goals - I call them checkpoints - along the way. It also allowed me to dig deep inside when I needed a helping hand and there was nobody else to turn to. It helped me throw away my ego and realize the truth about learning - we do it all our lives.
Meditation has cured my restlessness. It gave me faith in the process and patience to accept the bitter pill we swallow daily. It also taught me to respect my friends and their decisions, and be grateful to have them. Finally - through meditation I realized I am happy with who I am - a positive, curious and extrovert geek.&lt;/p&gt;

&lt;p&gt;It would be awesome if the above makes you try out meditation in any form. If not - that&amp;rsquo;s ok too. I believe that everyone is entitled to explore life at their own pace. Maybe you will need it, maybe not, maybe you are already doing it in one form or the other.&lt;/p&gt;

&lt;p&gt;The next thing I&amp;rsquo;d like to talk about is outdoor/street/body-weight workout aka &lt;code&gt;calisthenics&lt;/code&gt;. I&amp;rsquo;ve been a fan of it and practised for years. The funny thing is that I never managed to reach a level where I felt proud of my progress. Then this summer happened. I decided to share the idea of preparing for an OCR (Obstacle Circuit Race) with some of my mates. Fortunately for me they decided to give that a go and the rest is history. From the summer up until now (excluding the occasional holiday), there have been no off days, no excuses. We have been training outdoors and feel awesome. Each of us is visibly more skilled, more passionate and better equipped to handle what life has in store for us. Forget about the &amp;ldquo;gainz&amp;rdquo; and the pose. It&amp;rsquo;s just a group of guys that enjoy the social contact, the friendly rivalry, overcoming ourselves self and becoming the best we can be.&lt;/p&gt;

&lt;p&gt;Finally - &lt;code&gt;reading&lt;/code&gt; and &lt;code&gt;writing&lt;/code&gt;. Quite some time passed before I could turn to non-technical literature and I am happy that this moment came. It felt like visiting an old friend, a sort of a homecoming. As for writing - this site is a testament to my commitment to write. I am by far not the most skilled guy but my determination to learn and willingness to share my thoughts about programming and life in general is something that has and will continue to help me meet the most awesome of people.&lt;/p&gt;

&lt;p&gt;Taking into account the aforementioned three things I have come to an inner peace with myself and am ready to face a variety of challenges. And that is what being human is all about, right? Knowing that you are vulnerable and that you know how much you don&amp;rsquo;t know. Aiming to keep on fighting so that you ultimately get better. Taking responsibility and living to the fullest.&lt;/p&gt;

&lt;p&gt;So, yes - it has been a terrible year. But that doesn&amp;rsquo;t mean that another revolution around the Sun by our planet has to turn us into ignorant, disconnected and aggressive beings. On the contrary! Now is the time to celebrate life with your loved ones, to take on new challenges and to open up to existing ones. Now is the time to be ready for changes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Scala Christmas Tree</title>
      <link>http://alexanderzafirov.github.io/zafirov.me/post/xmastree/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://alexanderzafirov.github.io/zafirov.me/post/xmastree/</guid>
      <description>&lt;p&gt;In the spirit of the Christmas and New Year&amp;rsquo;s festivities, I decided to share with you a short and fun recursive function that can warm your hearts. If not - hopefully it will warm your gray matter a bit.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import scala.annotation.tailrec

def xmasTree(height: Int): Unit = {
  @tailrec
  def xmasTree(n: Int, t: Int): Unit = {
    if (n == t) {
      println(&amp;quot; &amp;quot; * (t - n) + &amp;quot;*&amp;quot; * (1 + n * 2))
      println(if (n == 1) &amp;quot; # &amp;quot;
              else if (n == 2) &amp;quot;  #  &amp;quot;
              else List.fill(n / 3)(&amp;quot; &amp;quot; * (n - 1) + &amp;quot;###&amp;quot;).mkString(&amp;quot;\n&amp;quot;)
      )
    } else {
      println(&amp;quot; &amp;quot; * (t - n) + &amp;quot;*&amp;quot; * (1 + n * 2))
      xmasTree(n + 1, t)
    }
  }

  xmasTree(0, height)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Say you run this bad boy like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;xmasTree(12)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then the result will be a lovely &amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            *
           ***
          *****
         *******
        *********
       ***********
      *************
     ***************
    *****************
   *******************
  *********************
 ***********************
*************************
           ###
           ###
           ###
           ###
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;hellip; Christmas tree :)&lt;/p&gt;

&lt;p&gt;If I were to highlight something about this piece of code, it would be the tail-recursion - which is always awesome to have (and in this case it&amp;rsquo;s verified by the compiler). Then there is the simple math that counts the stars to be printed on the row and amount of spaces to be placed before the stars. Finally we have the trunk implementation which utilizes nested lists - done with &lt;code&gt;List.fill&lt;/code&gt; and (again) simple math to find the proper position of the trunk.&lt;/p&gt;

&lt;p&gt;Happy Holidays!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working with nulls in Spark UDFs</title>
      <link>http://alexanderzafirov.github.io/zafirov.me/post/sparknulls/</link>
      <pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://alexanderzafirov.github.io/zafirov.me/post/sparknulls/</guid>
      <description>&lt;p&gt;Today we are discussing User Defined Functions (UDF) in Spark.&lt;/p&gt;

&lt;p&gt;Sometimes the simplest things are hardest to work out. Let&amp;rsquo;s say I have a &lt;code&gt;DataFrame&lt;/code&gt; created from a parquet file which can have nullable columns that are of a certain type - in this example that is &lt;code&gt;Int&lt;/code&gt;. The reason I chose &lt;code&gt;Int&lt;/code&gt; particularly is that it is &lt;em&gt;not a trivial&lt;/em&gt; case i.e. it doesn&amp;rsquo;t accept &lt;code&gt;null&lt;/code&gt;s as values. The problem that arises is that the &lt;code&gt;DataFrame&lt;/code&gt; can have &lt;code&gt;IntegerType&lt;/code&gt; specified for the schema and still contain &lt;code&gt;null&lt;/code&gt;s. I need to think of something that reflects the fact that I&amp;rsquo;m getting &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; in the same type or else I will get a runtime exception for wrong input type. Tackling this is the goal of this post. On a side note - &lt;code&gt;String&lt;/code&gt; is &lt;em&gt;trivial&lt;/em&gt; since it works with nulls - no need for magic there.&lt;/p&gt;

&lt;p&gt;The first solution to the problem is super ugly. I don&amp;rsquo;t like it but it works. I know that the following could be done with an implicit but I don&amp;rsquo;t like them since they are hard to trace in a bigger code base.&lt;/p&gt;

&lt;p&gt;The first step is to  set the input of the UDF to be &lt;code&gt;Any&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;def foo: (Any =&amp;gt; Int) = (a: Any) =&amp;gt; toInt(a) / 100000

val toFoo = udf(foo)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that the most important thing happens in the &lt;code&gt;toInt&lt;/code&gt; function. Since I have a val of type &lt;code&gt;Any&lt;/code&gt; that may contain a &lt;code&gt;null&lt;/code&gt;, I wrap that in an &lt;code&gt;Option&lt;/code&gt;. After that I proceed to set a default value. Since I&amp;rsquo;m specifying Int and Any as types, the compiler will try and resolve the first common type in the type tree - that is &lt;code&gt;Any&lt;/code&gt; - I need to cast the result to &lt;code&gt;Int&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;def toInt(v: Any): Int = Option(v).getOrElse(0).asInstanceOf[Int]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;val outDf = dfParquet
    .withColumn(&amp;quot;foo_column&amp;quot;, toFoo(&#39;a))
    .select(&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;foo_column&amp;quot;)
    .show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Phew! As I said this is not bullet-proof. The reason is that I use &lt;code&gt;Any&lt;/code&gt;, I&amp;rsquo;ve opened the door to all types so if I pass a String, let&amp;rsquo;s say, the &lt;code&gt;asInstanceOf&lt;/code&gt; will fail during execution.&lt;/p&gt;

&lt;p&gt;Luckily the solution is quite simple. Just use Java&amp;rsquo;s &lt;code&gt;Integer&lt;/code&gt; boxed primitive. It is a perfect candidate for the case. This means no conversions from &lt;code&gt;Any&lt;/code&gt;, no opening of Pandora&amp;rsquo;s Any box. If you need to make better sense of the &lt;code&gt;null&lt;/code&gt; value you can leverage on the &lt;code&gt;Option&lt;/code&gt; class.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;def foo: (Integer =&amp;gt; Option[Integer]) = (i: Integer) =&amp;gt; Option(i).map(_ + 1)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://alexanderzafirov.github.io/zafirov.me/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://alexanderzafirov.github.io/zafirov.me/about/</guid>
      <description>&lt;p&gt;Hello and welcome to my blog. My name is Alex and I am a software engineer. After several years of experience in the IT industry I have already faced some of the main challenges it has to offer. I have been part of big/distributed/multicultural/multilingual teams with skill set that varies from junior to top-notch devs. I would put myself in the middle of that journey, leaning towards the latter part.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m particularly interested in the functional programming paradigm that I try to apply when building software. Scala and the Akka framework capture that concept nicely and give me the freedom to write maintainable, modularized and testable code that is released to production. I like quirky stuff like Bash, vim, Haskell and less quirky stuff like Python.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m also on top of the Big Data hype train since it brings a whole new dimension to the field. I&amp;rsquo;m talking about Spark and a bit of machine learning. And, of course - where would I be if I haven&amp;rsquo;t touched a Docker container (or two), Jenkins, AWS automation scripts for EC2 instance generation, etc.&lt;/p&gt;

&lt;p&gt;While I present you with the tech side of my experience I want to pivot here and say that I also enjoy practising the soft skills and the dynamics that they bring in the data driven environments I like to hang out in. Talking to people from different industries inspires me to learn more about the world we live in and take full advantage of the awesome job I get to practise daily.&lt;/p&gt;

&lt;p&gt;I am not afraid of failure because everything is a learning experience. So as an exercise I decided to start voicing my opinions here in hope that I stand corrected or supported on the solutions to various problems I tackle daily.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>